----------------------------------------------------------
TEST 16: printf("Test %2d: overlap-last-dst fragmentation\t\t", count);
----------------------------------------------------------

 if (test == 0 || test == count) {
    printf("Test %2d: overlap-last-dst fragmentation\t\t", count);
    memset(bla, count % 256, sizeof(bla));
    if ((pkt = thc_create_ipv6(interface, PREFER_GLOBAL, &pkt_len, src6, dst6, 255, 0, 0, 0, 0)) == NULL)
      return -1;
    memset(buf, 0, sizeof(buf));
    buf[0] = NXT_IGNORE;
    buf[1] = 0;
    if (thc_add_hdr_dst(pkt, &pkt_len, (unsigned char *) &buf, 6) < 0)
      return -1;
    thc_add_icmp6(pkt, &pkt_len, ICMP6_PINGREQUEST, 0, count, (unsigned char *) &bla, srcmtu - 150, 0);
    if (thc_generate_pkt(interface, srcmac, dstmac, pkt, &pkt_len) < 0)
      return -1;
    if ((pkt2 = thc_create_ipv6(interface, PREFER_GLOBAL, &pkt_len2, src6, dst6, 255, 0, 0, 0, 0)) == NULL)
      return -1;
    if (thc_add_hdr_dst(pkt2, &pkt_len2, (unsigned char *) &buf, 6) < 0)
      return -1;
    thc_add_icmp6(pkt2, &pkt_len2, ICMP6_PINGREPLY, 0, count, (unsigned char *) &bla, srcmtu - 150, 0);
    if (thc_generate_pkt(interface, srcmac, dstmac, pkt2, &pkt_len2) < 0)
      return -1;

    /* frag stuff */
    hdr = (thc_ipv6_hdr *) pkt2;
    i = ((hdr->pkt_len - 40 - 14 + 14 * rawmode - 10) / 8) * 8;
    if ((pkt3 = thc_create_ipv6(interface, PREFER_GLOBAL, &pkt_len3, src6, dst6, 0, 0, 0, 0, 0)) == NULL)
      return -1;
    if (thc_add_hdr_fragment(pkt3, &pkt_len3, 0, 1, count))
      return -1;
    memcpy(buf, hdr->pkt + 40 + 14 - 14 * rawmode, hdr->pkt_len - 40 - 14 + 14 * rawmode);
    if (thc_add_data6(pkt3, &pkt_len3, NXT_DST, buf, hdr->pkt_len - 40 - 14 + 14 * rawmode - 22))
      return -1;
    thc_generate_and_send_pkt(interface, srcmac, dstmac, pkt3, &pkt_len3);      // ignore
    pkt3 = thc_destroy_packet(pkt3);
    hdr = (thc_ipv6_hdr *) pkt;
    if ((pkt3 = thc_create_ipv6(interface, PREFER_GLOBAL, &pkt_len3, src6, dst6, 0, 0, 0, 0, 0)) == NULL)
      return -1;
    if (thc_add_hdr_fragment(pkt3, &pkt_len3, 1, 0, count))
      return -1;
    memcpy(buf, hdr->pkt + 40 + 14 - 14 * rawmode, hdr->pkt_len - 40 - 14 + 14 * rawmode);
    if (thc_add_data6(pkt3, &pkt_len3, NXT_DST, buf + 8, hdr->pkt_len - 40 - 14 + 14 * rawmode - 22))
      return -1;
    thc_generate_and_send_pkt(interface, srcmac, dstmac, pkt3, &pkt_len3);      // ignore
    pkt3 = thc_destroy_packet(pkt3);

    /* lets see if it worked */
    while (thc_pcap_check(p, (char *) ignoreit, NULL) > 0);
    pkt = thc_destroy_packet(pkt);
    pkt2 = thc_destroy_packet(pkt2);
    if (check_for_reply(p, NXT_ICMP6, ICMP6_PINGREPLY, NXT_ICMP6, ICMP6_PINGREPLY, fragsize - 200, 0, bla))
      tests[count] = 1;
  }
  count++;

-----------------------------------------------------------------------

Test  0: normal ping6				PASSED - we got a reply
Test 16: overlap-last-dst fragmentation		FAILED - no reply
Test 54: normal ping6 (still alive?)		PASSED - we got a reply
------------------------------------------------------------------------

print |p$ip6$exts|;
1

print p$ip6$exts[0];

[id=60, hopopts=<uninitialized>, dstopts=[nxt=58, len=0, options=[[otype=31, len=0, data=], [otype=0, len=0, data=], [otype=0, len=0, data=], [otype=0, len=0, data=], [otype=0, len=0, data=]]], routing=<uninitialized>, fragment=<uninitialized>, ah=<uninitialized>, esp=<uninitialized>, mobility=<uninitialized>]

















